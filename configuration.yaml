homeassistant:
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: !secret lat
  longitude: !secret long
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 28
  unit_system: metric
  time_zone: Europe/Stockholm

#tibber:
#  access_token: !secret tibber-token
# Enables a bunch of components with autoconfig
config:
frontend:
#updater:
discovery:
history:
sun:
#ios:
#homekit:
system_health:
#mobile_app:

#http:
#  api_password: !secret http_password

# Allows you to issue voice commands from the frontend in enabled browsers
#conversation:

# View all events in a logbook
#logbook:

# Text to speech
#tts:
#  platform: google

default_config:

mqtt:
  sensor: !include_dir_merge_list mqtt

sonos:

recorder:
  commit_interval: 1
  purge_keep_days: 7

influxdb:
  host: 10.0.1.3
  username: home-assistant
  password: !secret influx_password

#input_boolean: !include input_boolean.yaml
automation: !include automations.yaml
sensor: !include_dir_merge_list sensors
binary_sensor: !include_dir_merge_list binary_sensors
plant: 
  tomatoes:
    sensors:
      moisture: sensor.plant_sensor_1a23_moisture
      temperature: sensor.plant_sensor_1a23_temperature
      conductivity: sensor.plant_sensor_1a23_conductivity
      brightness: sensor.plant_sensor_1a23_illuminance
    min_moisture: 20
    max_moisture: 60
    min_battery: 17
    min_conductivity: 500
    min_temperature: 15
  carrots:
    sensors:
      moisture: sensor.plant_sensor_02bf_moisture
      temperature: sensor.plant_sensor_02bf_temperature
      conductivity: sensor.plant_sensor_02bf_conductivity
      brightness: sensor.plant_sensor_02bf_illuminance
    min_moisture: 20
    max_moisture: 60
    min_battery: 17
    min_conductivity: 500
    min_temperature: 15
climate: !include_dir_merge_list climate
utility_meter:
  energy:
    source: sensor.heat_pump_kwh
    cycle: hourly
    name: heat_pump_kwh_hourly

cloud:
  google_actions:
    filter:
      exclude_domains:
        - media

# From https://community.home-assistant.io/t/tibber-price-level-to-turn-on-heating/404341, will be used to automate heating
template:
  - sensor:
      - name: Electricity Price Level (24h)
        unit_of_measurement: ""
        icon: mdi:currency-usd
        state: >-
          {% set price_cur = states('sensor.electricity_price_vinstavagen_30') | float(0) %}
          {% set price_avg = state_attr('sensor.electricity_price_vinstavagen_30', 'avg_price') | float(0) %}
          {% if price_cur == 0 or price_avg == 0 %}
            -1
          {% else %}
            {% set price_ratio = (price_cur / price_avg) %}
            {% if price_ratio >= 1.4 %}
              5
            {% elif price_ratio >= 1.15 %}
              4
            {% elif price_ratio <= 0.6 %}
              1
            {% elif price_ratio <= 0.9 %}
              2
            {% else %}
              3
            {% endif %}
          {% endif %}
      - name: Electricity Price Level (Tibber 3-days)
        unit_of_measurement: ""
        icon: mdi:currency-usd
        state: >-
          {% set enum_lvl = state_attr('sensor.electricity_price_vinstavagen_30', 'price_level') %}
          {% if enum_lvl == "VERY_CHEAP" %}
            1
          {% elif enum_lvl == "CHEAP" %}
            2
          {% elif enum_lvl == "NORMAL" %}
            3
          {% elif enum_lvl == "EXPENSIVE" %}
            4
          {% else %} 
            5
          {% endif %}
      - name: Electricity Price Level (combined)
        unit_of_measurement: ""
        icon: mdi:currency-usd
        state: >-
          {% set level1 = states('sensor.electricity_price_level_24h') %}
          {% set level3 = states('sensor.electricity_price_level_tibber_3_days') %}
          {% if level1 == level3 %}
            {{ level1 }}
          {% elif level1 in ['unknown','undefined','none'] or level3 in ['unknown','undefined','none'] %}
            -1
          {% elif level1 == "1" %}
            {{ level3 }}
          {% elif level3 == "1" %}
            {{ level1 }}
          {% elif level1 == "2" %}
            {{ level3 }}
          {% elif level3 == "2" %}
            {{ level1 }}
          {% elif level1 == "3" %}
            {{ level3 }}
          {% elif level3 == "3" %}
            {{ level1 }}
          {% elif level1 == "4" %}
            {{ level3 }}
          {% else %}
            {{ level1 }}
          {% endif %}
